<!-- 
	This is the main configuration file of Mireka.
	
	For more information on the individual configuration elements see the 
	Javadoc documentation in the doc/javadoc directory. For an overview read
	the documentation in the doc directory.  
-->
<web-app xmlns="http://caucho.com/ns/resin"
	xmlns:resin="urn:java:com.caucho.resin"
	xmlns:mireka="urn:java:mireka"
	xmlns:subetha="urn:java:org.subethamail.smtp.server"
	>

	<!--
		Parameters related to the directory layout.
		
		Usually you don't have to change these.
	-->
	<system-property mireka.home="${mirekaHome}"/>
	<system-property logback.configurationFile="${__DIR__}/logback.xml"/>
	<dependency path="${__DIR__}/logback.xml" />

	<mireka:HomeDir>
		<path>${mirekaHome}</path>
	</mireka:HomeDir>

	<!--
		The default host name used to identify this server, for example
		in the SMTP HELO command. This value is referred at several 
		places in the configuration files.
	-->
	<system-property helo="mail.example.com"/>

	<!-- 
		Uncomment to set global JSSE TLS settings. This is not necessary 
		if TLS is not used or if it is configured for each service 
		separately.
	-->
	<!--
	<system-property javax.net.ssl.keyStore="${mirekaHome}/conf/keystore.jks"/>
	<system-property javax.net.ssl.keyStorePassword="changeit"/>
	-->
	
	<!--
		Default SMTP client factory, it specifies the properties of the 
		outgoing SMTP connections.
	-->
	<mireka:ClientFactory>
		<Named>clientFactory</Named>
		<mireka:helo>${helo}</mireka:helo>
		<!-- <mireka:bind>192.0.2.0</mireka:bind> -->
	</mireka:ClientFactory>
	
	<!--
		Default backend server. It specifies an SMTP server, to where 
		mails are relayed for delivery or submission. It can be 
		referred where SMTP proxy functionality is configured. 
	-->
	<mireka:BackendServer>
		<Named>backendServer</Named>
		
		<mireka:host>backend.example.com</mireka:host>
		<mireka:clientFactory>
			#{clientFactory}
		</mireka:clientFactory>
	</mireka:BackendServer>

	<!--
		Default maildrop repository. A maildrop corresponds to a POP3
		account. Maildrops are used to store incoming mails (via SMTP) 
		and to transfer mails to the user (via POP3). 
	-->	
	<mireka:MaildropRepository>
		<Named>maildropRepository</Named>
		 <ApplicationScoped/>
		<mireka:dir>${mirekaHome}/maildrops</mireka:dir>
	</mireka:MaildropRepository>
	
	<resin:import path="${__DIR__}/domains.xml" />
	<!-- 
		comment out if none of the submission and POP3 services are 
		active
	-->
	<resin:import path="${__DIR__}/global-users.xml" />
	
	<!--
		Sender Rewriting Scheme (SRS) configuration. SRS is used to 
		make forwarding working even if receivers check SPF records.
	-->
	<mireka:Srs>
		<Named>srs</Named>
		 <ApplicationScoped/>
		 
		<!-- 
			Key for signing SRS encoded reverse paths. Use a random
			hexadecimal string here, like 37AB...
			You may want to use http://www.fourmilab.ch/hotbits/
		-->
		<!--
		<secretKey>ENTER A HEX KEY HERE</secretKey>
		-->
		<localDomains>#{localDomains}</localDomains>
	</mireka:Srs>
	
	<!--
		Default local recipients table. It enumerates all valid local 
		recipients and assigns a destination to them. The destination
		tells what to do with a mail sent to the corresponding 
		recipient. E.g. drop the mail or store it in a maildrop or 
		forward it to other addresses. 
	-->
	<LocalRecipientTable xmlns="urn:java:mireka">
		<Named xmlns="http://caucho.com/ns/resin">localRecipientsTable</Named>
		<localDomains>#{localDomains}</localDomains>
		
		<resin:import path="${__DIR__}/alias.xml" />
		
		<mapper>
			<MailingLists>
				<resin:import path="${__DIR__}/lists.xml" />
			</MailingLists>
		</mapper>
		
		<mapper>
			<ForwardLists>
				<resin:import path="${__DIR__}/forwards.xml" />
			</ForwardLists>
		</mapper>

		<resin:import path="${__DIR__}/others.xml" />
		
		<!-- 
			comment out if POP service is not active
		-->
		<mapper>
			<GlobalUsersMaildropDestinationMapper>
				<maildropRepository>#{maildropRepository}</maildropRepository>
				<users>#{globalUsers}</users>
			</GlobalUsersMaildropDestinationMapper>
		</mapper>
		
		<!--
			comment out if forwarding is not used
		-->
		<mapper>
			<RecipientSpecificationDestinationPair>
				<recipientSpecification>
					<SrsRecipientSpecification/>
				</recipientSpecification>
				<destination>
					<SrsDestination>
						<srs>#{srs}</srs>
						<transmitter>#{primaryTransmitter}</transmitter>
					</SrsDestination>
				</destination>
			</RecipientSpecificationDestinationPair>
		</mapper>
		
	</LocalRecipientTable>
	
	
	<!--
		uncomment to run the POP3 server
	-->
	<!--
	<resin:import path="${__DIR__}/pop/pop.xml" />
	-->
	
	<!--
		uncomment to run the RFC 4409 message submission service

		This service - depending on its configuration - either directly 
		transmits messages to the mail servers of the recipient on the 
		internet, or relays messages to a backend server.
	-->
	<!--
	<resin:import path="${__DIR__}/submission/submission.xml" />
	-->
	
	<!--
		uncomment to run the MX SMTP server
		
		This service - depending on its configuration - either relay  
		a message to a backend server, or deliver it into a local POP3
		maildrop. 
	-->
	<!--
	<resin:import path="${__DIR__}/mx/mx.xml" />
	-->	
	
</web-app>